if(window.chrome&&!window.chrome.cast){var a=document.createElement("script");a.src="https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1",document.head.appendChild(a)}class Castjs{constructor(a={}){var b=["tab_and_origin_scoped","origin_scoped","page_scoped"];a.joinpolicy&& -1!==b.indexOf(a.joinpolicy)||(a.joinpolicy="tab_and_origin_scoped"),a.receiver&&""!==a.receiver||(a.receiver="CC1AD845"),this._events={},this._player=null,this._controller=null,this.version="v5.1.0",this.receiver=a.receiver,this.joinpolicy=a.joinpolicy,this.available=!1,this.connected=!1,this.device="Chromecast",this.src="",this.title="",this.description="",this.poster="",this.subtitles=[],this.volumeLevel=1,this.muted=!1,this.paused=!1,this.time=0,this.timePretty="00:00:00",this.duration=0,this.durationPretty="00:00:00",this.progress=0,this.state="disconnected",this._init()}_getBrowser(){return navigator.userAgent.toLowerCase().indexOf("firefox")> -1?"Firefox: Please enable casting, click here: https://googlechromecast.com/how-to-cast-firefox-to-tv/":navigator.userAgent.toLowerCase().indexOf("opr/")> -1?"Opera: Please enable casting, click here: https://googlechromecast.com/how-to-cast-opera-browser-to-tv-using-google-chromecast/":navigator.userAgent.toLowerCase().indexOf("iron safari")> -1?"Iron Safari: Please enable casting, click here: https://googlechromecast.com/how-to-cast-opera-browser-to-tv-using-google-chromecast/":navigator.brave?"Brave: Please enable casting, click here: https://googlechromecast.com/how-to-cast-brave-browser-to-chromecast/":"This Browser"}_init(a=0){if(!window.chrome||!window.chrome.cast||!window.chrome.cast.isAvailable)return a++ >20?this.trigger("error","Casting is not enabled in "+this._getBrowser()):setTimeout(this._init.bind(this),250,a);clearInterval(this.intervalIsAvailable),cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:this.receiver,autoJoinPolicy:this.joinpolicy,language:"en-US",resumeSavedSession:!0}),this._player=new cast.framework.RemotePlayer,this._controller=new cast.framework.RemotePlayerController(this._player),this._controller.addEventListener("isConnectedChanged",this._isConnectedChanged.bind(this)),this._controller.addEventListener("isMediaLoadedChanged",this._isMediaLoadedChanged.bind(this)),this._controller.addEventListener("isMutedChanged",this._isMutedChanged.bind(this)),this._controller.addEventListener("isPausedChanged",this._isPausedChanged.bind(this)),this._controller.addEventListener("currentTimeChanged",this._currentTimeChanged.bind(this)),this._controller.addEventListener("durationChanged",this._durationChanged.bind(this)),this._controller.addEventListener("volumeLevelChanged",this._volumeLevelChanged.bind(this)),this._controller.addEventListener("playerStateChanged",this._playerStateChanged.bind(this)),this.available=!0,this.trigger("available")}_isMediaLoadedChanged(){this._player.isMediaLoaded&&setTimeout(()=>{if(this._player.mediaInfo){for(var b in this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||this.device,this.src=this._player.mediaInfo.contentId,this.title=this._player.title||null,this.description=this._player.mediaInfo.metadata.subtitle||null,this.poster=this._player.imageUrl||null,this.subtitles=[],this.volumeLevel=this.volumeLevel=Number(this._player.volumeLevel.toFixed(1)),this.muted=this._player.isMuted,this.paused=this._player.isPaused,this.time=Math.round(this._player.currentTime,1),this.timePretty=this._controller.getFormattedTime(this.time),this.duration=this._player.duration,this.durationPretty=this._controller.getFormattedTime(this._player.duration),this.progress=this._controller.getSeekPosition(this.time,this._player.duration),this.state=this._player.playerState.toLowerCase(),this._player.mediaInfo.tracks)"TEXT"===this._player.mediaInfo.tracks[b].type&&this.subtitles.push({label:this._player.mediaInfo.tracks[b].name,src:this._player.mediaInfo.tracks[b].trackContentId});var a=cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].activeTrackIds;a&&a.length&&this.subtitles[a[0]]&&(this.subtitles[a[0]].active=!0)}})}_isConnectedChanged(){this.connected=this._player.isConnected,this.connected&&(this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||this.device),this.state=this.connected?"connected":"disconnected",this.trigger("statechange"),this.trigger(this.connected?"connect":"disconnect")}_currentTimeChanged(){var a=this.time;this.time=Math.round(this._player.currentTime,1),this.duration=this._player.duration,this.progress=this._controller.getSeekPosition(this.time,this.duration),this.timePretty=this._controller.getFormattedTime(this.time),this.durationPretty=this._controller.getFormattedTime(this.duration),(a!=this.time||this._player.isPaused)&&this.trigger("timeupdate")}_durationChanged(){this.duration=this._player.duration}_volumeLevelChanged(){this.volumeLevel=Number(this._player.volumeLevel.toFixed(1)),this._player.isMediaLoaded&&this.trigger("volumechange")}_isMutedChanged(){var a=this.muted;this.muted=this._player.isMuted,a!=this.muted&&this.trigger(this.muted?"mute":"unmute")}_isPausedChanged(){this.paused=this._player.isPaused,this.paused&&this.trigger("pause")}_playerStateChanged(){if(this.connected=this._player.isConnected,this.connected)switch(this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||this.device,this.state=this._player.playerState.toLowerCase(),this.state){case"idle":return this.state="ended",this.trigger("statechange"),this.trigger("end"),this;case"buffering":return this.time=Math.round(this._player.currentTime,1),this.duration=this._player.duration,this.progress=this._controller.getSeekPosition(this.time,this.duration),this.timePretty=this._controller.getFormattedTime(this.time),this.durationPretty=this._controller.getFormattedTime(this.duration),this.trigger("statechange"),this.trigger("buffering"),this;case"playing":return setTimeout(()=>{this.trigger("statechange"),this.trigger("playing")}),this}}on(a,b){return this._events[a]||(this._events[a]=[]),this._events[a].push(b),this}off(a){return a?this._events[a]&&(this._events[a]=[]):this._events={},this}trigger(a){var c=Array.prototype.slice.call(arguments,1);for(var b in this._events[a])setTimeout(()=>{this._events[a][b].apply(this,c)},1);if("error"===a)return this;for(var b in this._events.event)setTimeout(()=>{this._events.event[b].apply(this,[a])},1);return this}cast(g,d={}){if(!g)return this.trigger("error","No media source specified.");for(var f in d.src=g,d)d.hasOwnProperty(f)&&(this[f]=d[f]);if(cast.framework.CastContext.getInstance().getCurrentSession()){var a=new chrome.cast.media.MediaInfo(this.src);if(a.metadata=new chrome.cast.media.GenericMediaMetadata,this.subtitles.length){a.textTrackStyle=new chrome.cast.media.TextTrackStyle,a.textTrackStyle.backgroundColor="#00000000",a.textTrackStyle.edgeColor="#00000016",a.textTrackStyle.edgeType="DROP_SHADOW",a.textTrackStyle.fontFamily="CASUAL",a.textTrackStyle.fontScale=1,a.textTrackStyle.foregroundColor="#FFFFFF",a.textTrackStyle={...a.textTrackStyle,...this.subtitleStyle};var h=[];for(var b in this.subtitles){var c=new chrome.cast.media.Track(b,"TEXT");c.name=this.subtitles[b].label,c.subtype="CAPTIONS",c.trackContentId=this.subtitles[b].src,c.trackContentType="text/vtt",c.trackId=parseInt(b),h.push(c)}a.tracks=h}a.metadata.images=[new chrome.cast.Image(this.poster)],a.metadata.title=this.title,a.metadata.subtitle=this.description;var e=new chrome.cast.media.LoadRequest(a);if(e.currentTime=this.time,e.autoplay=!this.paused,this.subtitles.length){for(var b in this.subtitles)if(this.subtitles[b].active){e.activeTrackIds=[parseInt(b)];break}}cast.framework.CastContext.getInstance().getCurrentSession().loadMedia(e).then(()=>(this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||this.device,this.paused&&this._controller.playOrPause(),this),a=>this.trigger("error",a))}else cast.framework.CastContext.getInstance().requestSession().then(()=>{if(!cast.framework.CastContext.getInstance().getCurrentSession())return this.trigger("error","Could not connect with the cast device");var a=new chrome.cast.media.MediaInfo(this.src);if(a.metadata=new chrome.cast.media.GenericMediaMetadata,this.subtitles.length){a.textTrackStyle=new chrome.cast.media.TextTrackStyle,a.textTrackStyle.backgroundColor="#00000000",a.textTrackStyle.edgeColor="#00000016",a.textTrackStyle.edgeType="DROP_SHADOW",a.textTrackStyle.fontFamily="CASUAL",a.textTrackStyle.fontScale=1,a.textTrackStyle.foregroundColor="#FFFFFF",a.textTrackStyle={...a.textTrackStyle,...this.subtitleStyle};var e=[];for(var b in this.subtitles){var c=new chrome.cast.media.Track(b,"TEXT");c.name=this.subtitles[b].label,c.subtype="CAPTIONS",c.trackContentId=this.subtitles[b].src,c.trackContentType="text/vtt",c.trackId=parseInt(b),e.push(c)}a.tracks=e}a.metadata.images=[new chrome.cast.Image(this.poster)],a.metadata.title=this.title,a.metadata.subtitle=this.description;var d=new chrome.cast.media.LoadRequest(a);if(d.currentTime=this.time,d.autoplay=!this.paused,this.subtitles.length){for(var b in this.subtitles)if(this.subtitles[b].active){d.activeTrackIds=[parseInt(b)];break}}cast.framework.CastContext.getInstance().getCurrentSession().loadMedia(d).then(()=>(this.device=cast.framework.CastContext.getInstance().getCurrentSession().getCastDevice().friendlyName||this.device,this.paused&&this._controller.playOrPause(),this),a=>this.trigger("error",a))},a=>("cancel"!==a&&this.trigger("error",a),this))}seek(a,b){return b&&(a=this._controller.getSeekTime(a,this._player.duration)),this._player.currentTime=a,this._controller.seek(),this}volume(a){return this._player.volumeLevel=a,this._controller.setVolumeLevel(),this}play(){return this.paused&&this._controller.playOrPause(),this}pause(){return this.paused||this._controller.playOrPause(),this}mute(){return this.muted||this._controller.muteOrUnmute(),this}unmute(){return this.muted&&this._controller.muteOrUnmute(),this}subtitle(a){var b=new chrome.cast.media.EditTracksInfoRequest([parseInt(a)]);cast.framework.CastContext.getInstance().getCurrentSession().getSessionObj().media[0].editTracksInfo(b,()=>{for(var b in this.subtitles)delete this.subtitles[b].active,b==a&&(this.subtitles[b].active=!0);return this.trigger("subtitlechange")},a=>this.trigger("error",a))}disconnect(){return cast.framework.CastContext.getInstance().endCurrentSession(!0),this._controller.stop(),this.connected=!1,this.device="Chromecast",this.src="",this.title="",this.description="",this.poster="",this.subtitles=[],this.volumeLevel=1,this.muted=!1,this.paused=!1,this.time=0,this.timePretty="00:00:00",this.duration=0,this.durationPretty="00:00:00",this.progress=0,this.state="disconnected",this.trigger("disconnect"),this}}"undefined"!=typeof module&&(module.exports=Castjs)
